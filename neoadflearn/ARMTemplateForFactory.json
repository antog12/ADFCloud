{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "neoadflearn"
		},
		"AdfByExampleSql_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"AdfByExampleSql\""
		},
		"AzureBlobStorageLnkSSIS_csv_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"AzureBlobStorageLnkSSIS_csv\""
		},
		"AzureBlobStorage_txt_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"AzureBlobStorage_txt\""
		},
		"ConexionDestinoADLS_sql_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"ConexionDestinoADLS_sql\""
		},
		"ConexionOrigeADLS_accountKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"accountKey\"de \"ConexionOrigeADLS\""
		},
		"JugadoresPorNacionalidad_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"JugadoresPorNacionalidad\""
		},
		"LNK_Abbreviations_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"LNK_Abbreviations\""
		},
		"LNK_DB_AW19_origenADLS_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"LNK_DB_AW19_origenADLS\""
		},
		"LNK_ETLinAzure_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"LNK_ETLinAzure\""
		},
		"LNK_statesIncomeData_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"LNK_statesIncomeData\""
		},
		"LnkSSIS_DB_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"LnkSSIS_DB\""
		},
		"LookUpDemosSql_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"LookUpDemosSql\""
		},
		"OrigengenericoADLS_accountKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"accountKey\"de \"OrigengenericoADLS\""
		},
		"adfbyexample_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"adfbyexample\""
		},
		"adfbyexamplesa_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"adfbyexamplesa\""
		},
		"adfbyexmplesa1_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"adfbyexmplesa1\""
		},
		"conexionDestinoADLS_accountKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"accountKey\"de \"conexionDestinoADLS\""
		},
		"conexionOrigenADLS_accountKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"accountKey\"de \"conexionOrigenADLS\""
		},
		"destinogenericoADLS_accountKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"accountKey\"de \"destinogenericoADLS\""
		},
		"moviesBlobstorage_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"moviesBlobstorage\""
		},
		"promedios_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"promedios\""
		},
		"ConexionOrigeADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://neomaster.dfs.core.windows.net/"
		},
		"OrigengenericoADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://neomaster.dfs.core.windows.net/"
		},
		"conexionDestinoADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://neomaster.dfs.core.windows.net/"
		},
		"conexionOrigenADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://neomaster.dfs.core.windows.net/"
		},
		"destinogenericoADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://neomaster.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Agregate')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete Promedios",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "promedios",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "Delete promedios"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Delete jugadoresPorNacinalidad",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "JugadoresPorNacionalidad",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "Delete JugadoresPornacinalidad"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Delete Promedios",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Delete jugadoresPorNacinalidad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Valores Agregados",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"OrigenFifa": {},
									"OrigenFifa2": {},
									"destinoPromedios": {},
									"DestinoJugadoresPornacionalidad": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SSIS_ADF"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-16T15:56:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/promedios')]",
				"[concat(variables('factoryId'), '/linkedServices/JugadoresPorNacionalidad')]",
				"[concat(variables('factoryId'), '/dataflows/Valores Agregados')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ArchivarArchivo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Archivar un archivo despues del copy data sql en otra carpeta de almacenaje.",
				"activities": [
					{
						"name": "de csv a DB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table CustomerDetails",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EmpName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmpName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "empAdd",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmpAdd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Deptname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DeptName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CdD_Customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DB_Customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "de archivo a archivo",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CdD_Customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Archivoenhistorico",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "EliminarArchivoDeOrigen",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "de csv a DB",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "de archivo a archivo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CdD_Customer",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADF Engineer Interview"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-21T13:08:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CdD_Customer')]",
				"[concat(variables('factoryId'), '/datasets/DB_Customer')]",
				"[concat(variables('factoryId'), '/datasets/Archivoenhistorico')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bulk Copy from Files to Database')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "GetMetadataDataset",
								"type": "DatasetReference",
								"parameters": {
									"SourceContainer": {
										"value": "@pipeline().parameters.SourceContainer",
										"type": "Expression"
									},
									"SourceDirectory": {
										"value": "@pipeline().parameters.SourceDirectory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Files').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyFiles",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SourceDataset",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"SourceContainer": {
													"value": "@pipeline().parameters.SourceContainer",
													"type": "Expression"
												},
												"SourceDirectory": {
													"value": "@pipeline().parameters.SourceDirectory",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlDatabaseSinkDataset",
											"type": "DatasetReference",
											"parameters": {
												"sinkTableName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "CopyFiles_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SourceDataset",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"SourceContainer": {
													"value": "@pipeline().parameters.SourceContainer",
													"type": "Expression"
												},
												"SourceDirectory": {
													"value": "@pipeline().parameters.SourceDirectory",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlDatabaseSinkDataset",
											"type": "DatasetReference",
											"parameters": {
												"sinkTableName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceContainer": {
						"type": "string"
					},
					"SourceDirectory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Copia masiva de archivos"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-24T12:46:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GetMetadataDataset')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlDatabaseSinkDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Condiciones de dependencia')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_dependencias",
							"value": {
								"value": "@string(int('not an int'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable4",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_dependencias",
							"value": {
								"value": "@string(10)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Skipped",
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_dependencias",
							"value": {
								"value": "@string(20)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable4",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_dependencias",
							"value": {
								"value": "@addhours(utcnow(),1)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"v_dependencias": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Capítulo 6"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-06T10:23:43Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalEdad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mayores y Menores de 1990",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CondicionSiNoEdad",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"mayores1990": {},
									"Menores1990": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SSIS_ADF"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T11:14:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CondicionSiNoEdad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBSQl a ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Advworks SQL server to ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CdD_origen_SQLDimensiones",
								"type": "DatasetReference",
								"parameters": {
									"Tablename": {
										"value": "@pipeline().parameters.Tablename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CdD_destino_Dimensiones",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@pipeline().parameters.Filename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tablename": {
						"type": "String"
					},
					"Filename": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-23T13:23:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CdD_origen_SQLDimensiones')]",
				"[concat(variables('factoryId'), '/datasets/CdD_destino_Dimensiones')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBSQl a ADLS_conExpresiones')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Advworks SQL server to ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CdD_origen_SQLDimensiones",
								"type": "DatasetReference",
								"parameters": {
									"Tablename": {
										"value": "@pipeline().parameters.Tablename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CdD_destino_Dimensiones",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat(pipeline().parameters.Filename,'_',formatDateTime(utcnow(),'yyyy-MM-dd'),'_',formatDateTime(utcnow(),'HH:mm:ss'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tablename": {
						"type": "String"
					},
					"Filename": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-24T10:44:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CdD_origen_SQLDimensiones')]",
				"[concat(variables('factoryId'), '/datasets/CdD_destino_Dimensiones')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBSQl a ADLS_conVariables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Advworks SQL server to ADLS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "modificar variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CdD_origen_SQLDimensiones",
								"type": "DatasetReference",
								"parameters": {
									"Tablename": {
										"value": "@pipeline().parameters.Tablename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CdD_destino_Dimensiones",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat(variables('FileName'),'_',formatDateTime(utcnow(),'yyyy-MM-dd'),'_',formatDateTime(utcnow(),'HH:mm:ss'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "modificar variable",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FileName",
							"value": {
								"value": "@replace(pipeline().parameters.Tablename,'SalesLT','')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tablename": {
						"type": "String"
					}
				},
				"variables": {
					"FileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-27T10:02:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CdD_origen_SQLDimensiones')]",
				"[concat(variables('factoryId'), '/datasets/CdD_destino_Dimensiones')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/De_csv_a_sql_videoGames2022')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "VideoGames2022",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "adfbyexmplesa1",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Day",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Day",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Platform(s)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Platform",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Genre(s)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Genre",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Developer(s)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Developer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Publisher(s)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Publisher",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CdD_videoGames2022",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CdD_VideoGamesSQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-27T11:18:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CdD_videoGames2022')]",
				"[concat(variables('factoryId'), '/datasets/CdD_VideoGamesSQL')]",
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Descomprimir archivo e ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ocx",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "master//azure-data-factory-by-example-main.zip"
							},
							{
								"name": "Destination",
								"value": "destinomaster//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_ocx",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_ocx",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Capítulo 2"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-24T11:00:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_ocx')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_ocx')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HKB_datos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CRUD",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"hkbOrigen": {},
									"hkbDestino": {},
									"destinoH": {},
									"destinoK": {},
									"destinoB": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-10T11:02:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CRUD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportCandyShackSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Importar datos de  ventas",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "azure-data-factory-by-example-main/SampleData/CandyShack",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table dbo.Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Retailer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Retailer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesMonth",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesMonth",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Product",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Product",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesValue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesValueUSD",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "UnitsSold",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UnitsSold",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ABS_CSV_CandyShack",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Capítulo 3"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-28T17:01:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ABS_CSV_CandyShack')]",
				"[concat(variables('factoryId'), '/datasets/ASQL_dboSalesLoad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSampleData2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_yj1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "landing//azure-data-factory-by-example-main.zip"
							},
							{
								"name": "Destination",
								"value": "sampledata//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_yj1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_yj1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Capítulo 2"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-23T16:46:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_yj1')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_yj1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportcubeSugarSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "azure-data-factory-by-example-main/SampleData/SugarCube",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table dbo.Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['Month']"
										},
										"sink": {
											"name": "SalesMonth",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['Company']"
										},
										"sink": {
											"name": "Retailer",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Sales'][0]['Product']"
										},
										"sink": {
											"name": "Product",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Sales'][0]['ManufacturerProductCode']"
										},
										"sink": {
											"name": "ManufacturerProductCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Sales'][0]['Units']"
										},
										"sink": {
											"name": "UnitsSold",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['Sales'][0]['Value']"
										},
										"sink": {
											"name": "SalesValueUSD",
											"type": "Decimal"
										}
									}
								],
								"collectionReference": "$['Sales']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "ABS_JSON_Sugarcube",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Capítulo 3"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-28T17:01:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ABS_JSON_Sugarcube')]",
				"[concat(variables('factoryId'), '/datasets/ASQL_dboSalesLoad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportcubeSugarSales_RaiseErrors')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "azure-data-factory-by-example-main/SampleData/SugarCube",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table dbo.Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['Month']"
										},
										"sink": {
											"name": "SalesMonth",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['Company']"
										},
										"sink": {
											"name": "Retailer",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Sales'][0]['Product']"
										},
										"sink": {
											"name": "Product",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Sales'][0]['ManufacturerProductCode']"
										},
										"sink": {
											"name": "ManufacturerProductCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Sales'][0]['Units']"
										},
										"sink": {
											"name": "UnitsSold",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['Sales'][0]['Value']"
										},
										"sink": {
											"name": "SalesValueUSD",
											"type": "Decimal"
										}
									}
								],
								"collectionReference": "$['Sales']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "ABS_JSON_Sugarcube",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Capítulo 6"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-06T10:42:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ABS_JSON_Sugarcube')]",
				"[concat(variables('factoryId'), '/datasets/ASQL_dboSalesLoad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportcubeSugarSales_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "azure-data-factory-by-example-main/SampleData/SugarCube",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table dbo.Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['Month']"
										},
										"sink": {
											"name": "SalesMonth",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['Company']"
										},
										"sink": {
											"name": "Retailer",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Sales'][0]['Product']"
										},
										"sink": {
											"name": "Product",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Sales'][0]['ManufacturerProductCode']"
										},
										"sink": {
											"name": "ManufacturerProductCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Sales'][0]['Units']"
										},
										"sink": {
											"name": "UnitsSold",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['Sales'][0]['Value']"
										},
										"sink": {
											"name": "SalesValueUSD",
											"type": "Decimal"
										}
									}
								],
								"collectionReference": "$['Sales']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "CdD_ABS_JSON_adfbyexamplesa1",
								"type": "DatasetReference",
								"parameters": {
									"Contenedor": "sampledata",
									"Directorio": ".",
									"Archivo": "."
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Capítulo 5"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-02T15:53:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CdD_ABS_JSON_adfbyexamplesa1')]",
				"[concat(variables('factoryId'), '/datasets/ASQL_dboSalesLoad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportsFormatFolder_Dual')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Se ejecutará 2 veces. Una para SweetsTreats y otra para Desserts4All",
				"activities": [
					{
						"name": "Import Sweet treats data",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Importsformatfolder",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"WildCardfolderPath": "azure-data-factory-by-example-main/SampleData/SweetTreats",
								"wildCardfileName": "*.csv"
							}
						}
					},
					{
						"name": "Import Dessert4all data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Import Sweet treats data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Importsformatfolder",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"WildCardfolderPath": "azure-data-factory-by-example-main/SampleData/Desserts4All",
								"wildCardfileName": "*.csv"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Capítulo 5"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-03T10:52:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Importsformatfolder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportsformatFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "con parámetros, ejecuto un directorio y un archivo especifico",
				"activities": [
					{
						"name": "Importar datos de  ventas",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "RunSeqNo",
										"value": {
											"value": "@variables('RunSeqNo')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table dbo.Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "aBs_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Contenedor": "sampledata",
									"Directorio": {
										"value": "@pipeline().parameters.Directorio",
										"type": "Expression"
									},
									"Archivo": {
										"value": "@pipeline().parameters.Archivo",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Log Pipeline outcome",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Importar datos de  ventas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Done",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AdfByExampleSql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup RunSeqNo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[LogPipelineStart]",
								"storedProcedureParameters": {
									"Comments": {
										"type": "String",
										"value": {
											"value": "@{pipeline().Pipeline}\n@{pipeline().DataFactory}\n@{pipeline().parameters.Directorio}/@{pipeline().parameters.Archivo}",
											"type": "Expression"
										}
									},
									"PipelineRunId": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"RunStartDateTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set RunSeqNo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunSeqNo",
							"value": {
								"value": "@string(activity('Lookup RunSeqNo').output.firstRow.RunSeqNo)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Log Pipeline failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Importar datos de  ventas",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Failed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AdfByExampleSql",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Directorio": {
						"type": "string"
					},
					"Archivo": {
						"type": "string"
					}
				},
				"variables": {
					"RunSeqNo": {
						"type": "String",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Capítulo 6"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-06T08:20:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/aBs_CSV')]",
				"[concat(variables('factoryId'), '/datasets/ASQL_dboSalesLoad')]",
				"[concat(variables('factoryId'), '/linkedServices/AdfByExampleSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportsformatFile_Divert')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "con parámetros, ejecuto un directorio y un archivo especifico",
				"activities": [
					{
						"name": "Importar datos de  ventas",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "RunSeqNo",
										"value": {
											"value": "@variables('RunSeqNo')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table dbo.Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "adfbyexmplesa1",
										"type": "LinkedServiceReference"
									},
									"path": "output/errors"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "aBs_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Contenedor": "sampledata",
									"Directorio": {
										"value": "@pipeline().parameters.Directorio",
										"type": "Expression"
									},
									"Archivo": {
										"value": "@pipeline().parameters.Archivo",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Log Pipeline outcome",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "If rows Skipped",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Done",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AdfByExampleSql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup RunSeqNo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[LogPipelineStart]",
								"storedProcedureParameters": {
									"Comments": {
										"type": "String",
										"value": {
											"value": "@{pipeline().Pipeline}\n@{pipeline().DataFactory}\n@{pipeline().parameters.Directorio}/@{pipeline().parameters.Archivo}",
											"type": "Expression"
										}
									},
									"PipelineRunId": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"RunStartDateTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set RunSeqNo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunSeqNo",
							"value": {
								"value": "@string(activity('Lookup RunSeqNo').output.firstRow.RunSeqNo)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Log Pipeline failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Importar datos de  ventas",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Failed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AdfByExampleSql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "If rows Skipped",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Importar datos de  ventas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Importar datos de  ventas').output.rowsSkipped,0 )",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.Directorio",
													"type": "Expression"
												},
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "aBs_CSV",
											"type": "DatasetReference",
											"parameters": {
												"Contenedor": "output",
												"Directorio": ".",
												"Archivo": "."
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CdD_Loadingerror",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Directorio": {
						"type": "string"
					},
					"Archivo": {
						"type": "string"
					}
				},
				"variables": {
					"RunSeqNo": {
						"type": "String",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Capítulo 6"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-06T13:38:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/aBs_CSV')]",
				"[concat(variables('factoryId'), '/datasets/ASQL_dboSalesLoad')]",
				"[concat(variables('factoryId'), '/linkedServices/AdfByExampleSql')]",
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]",
				"[concat(variables('factoryId'), '/datasets/CdD_Loadingerror')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Importsformatfolder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Importar datos de  ventas",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "RunSeqNo",
										"value": {
											"value": "@variables('RunSeqNo')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.WildCardfolderPath",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@pipeline().parameters.wildCardfileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table dbo.Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ABS_CSV_Sweettreats",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Log Pipeline outcome",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Importar datos de  ventas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Done",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AdfByExampleSql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup RunSeqNo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[LogPipelineStart]",
								"storedProcedureParameters": {
									"Comments": {
										"type": "String",
										"value": null
									},
									"PipelineRunId": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"RunStartDateTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set RunSeqNo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunSeqNo",
							"value": {
								"value": "@string(activity('Lookup RunSeqNo').output.firstRow.RunSeqNo)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"WildCardfolderPath": {
						"type": "string"
					},
					"wildCardfileName": {
						"type": "string",
						"defaultValue": "*.csv"
					}
				},
				"variables": {
					"RunSeqNo": {
						"type": "String",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Capítulo 5"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-03T09:28:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ABS_CSV_Sweettreats')]",
				"[concat(variables('factoryId'), '/datasets/ASQL_dboSalesLoad')]",
				"[concat(variables('factoryId'), '/linkedServices/AdfByExampleSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportsweettreatsSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Importar datos de  ventas",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "azure-data-factory-by-example-main/SampleData/SweetTreats",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table dbo.Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ABS_CSV_Sweettreats",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Capítulo 3"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-28T17:01:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ABS_CSV_Sweettreats')]",
				"[concat(variables('factoryId'), '/datasets/ASQL_dboSalesLoad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportsweettreatsSales_Audit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Importar datos de  ventas",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "RunSeqNo",
										"value": {
											"value": "@variables('RunSeqNo')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "azure-data-factory-by-example-main/SampleData/SweetTreats",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table dbo.Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ABS_CSV_Sweettreats",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Log Pipeline outcome",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Importar datos de  ventas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Done",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AdfByExampleSql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup RunSeqNo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[LogPipelineStart]",
								"storedProcedureParameters": {
									"Comments": {
										"type": "String",
										"value": null
									},
									"PipelineRunId": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"RunStartDateTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set RunSeqNo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunSeqNo",
							"value": {
								"value": "@string(activity('Lookup RunSeqNo').output.firstRow.RunSeqNo)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"RunSeqNo": {
						"type": "String",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Capítulo 4"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-28T17:01:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ABS_CSV_Sweettreats')]",
				"[concat(variables('factoryId'), '/datasets/ASQL_dboSalesLoad')]",
				"[concat(variables('factoryId'), '/linkedServices/AdfByExampleSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportsweettreatsSales_Audit_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Importar datos de  ventas",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "RunSeqNo",
										"value": {
											"value": "@variables('RunSeqNo')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.WildCardfolderPath",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@pipeline().parameters.WildCardfilename",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table dbo.Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ABS_CSV_Sweettreats",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Log Pipeline outcome",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Importar datos de  ventas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Importar datos de  ventas').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Done",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AdfByExampleSql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup RunSeqNo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[LogPipelineStart]",
								"storedProcedureParameters": {
									"Comments": {
										"type": "String",
										"value": null
									},
									"PipelineRunId": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"RunStartDateTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set RunSeqNo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunSeqNo",
							"value": {
								"value": "@string(activity('Lookup RunSeqNo').output.firstRow.RunSeqNo)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"WildCardfolderPath": {
						"type": "string"
					},
					"WildCardfilename": {
						"type": "string",
						"defaultValue": "*.csv"
					}
				},
				"variables": {
					"RunSeqNo": {
						"type": "String",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Capítulo 5"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-02T16:33:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ABS_CSV_Sweettreats')]",
				"[concat(variables('factoryId'), '/datasets/ASQL_dboSalesLoad')]",
				"[concat(variables('factoryId'), '/linkedServices/AdfByExampleSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IngesHandyCandyMessages')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "azure-data-factory-by-example-main/SampleData/HandyCandy",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['TransactionId']"
										},
										"sink": {
											"name": "TransactionId"
										}
									},
									{
										"source": {
											"path": "$['TransactionDate']"
										},
										"sink": {
											"name": "TransactionDate"
										}
									},
									{
										"source": {
											"path": "$['StoreId']"
										},
										"sink": {
											"name": "StoreId"
										}
									},
									{
										"source": {
											"path": "$['Items'][0]['Product']"
										},
										"sink": {
											"name": "Product"
										}
									},
									{
										"source": {
											"path": "$['Items'][0]['Price']"
										},
										"sink": {
											"name": "Price"
										}
									}
								],
								"collectionReference": "$['Items']"
							}
						},
						"inputs": [
							{
								"referenceName": "ABS_JSON_HandyCandy",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CDS_ABS_PAR_HandyCandy",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Capítulo 3"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-24T14:00:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ABS_JSON_HandyCandy')]",
				"[concat(variables('factoryId'), '/datasets/CDS_ABS_PAR_HandyCandy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IngesHandyCandyMessages_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "azure-data-factory-by-example-main/SampleData/HandyCandy",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['TransactionId']"
										},
										"sink": {
											"name": "TransactionId"
										}
									},
									{
										"source": {
											"path": "$['TransactionDate']"
										},
										"sink": {
											"name": "TransactionDate"
										}
									},
									{
										"source": {
											"path": "$['StoreId']"
										},
										"sink": {
											"name": "StoreId"
										}
									},
									{
										"source": {
											"path": "$['Items'][0]['Product']"
										},
										"sink": {
											"name": "Product"
										}
									},
									{
										"source": {
											"path": "$['Items'][0]['Price']"
										},
										"sink": {
											"name": "Price"
										}
									}
								],
								"collectionReference": "$['Items']"
							}
						},
						"inputs": [
							{
								"referenceName": "CdD_ABS_JSON_adfbyexamplesa1",
								"type": "DatasetReference",
								"parameters": {
									"Contenedor": "sampledata",
									"Directorio": ".",
									"Archivo": "."
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CDS_ABS_PAR_HandyCandy",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Capítulo 5"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-02T16:15:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CdD_ABS_JSON_adfbyexamplesa1')]",
				"[concat(variables('factoryId'), '/datasets/CDS_ABS_PAR_HandyCandy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadJollyGoodSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[LogPipelineStart]",
								"storedProcedureParameters": {
									"Comments": {
										"type": "String",
										"value": null
									},
									"PipelineRunId": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"RunStartDateTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TransformJollyGoodSales",
								"type": "DataFlowReference",
								"parameters": {
									"p_RunSeqno": {
										"value": "@int(activity('Lookup1').output.firstRow.RunSeqNo)",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"JolleyGoodSales": {},
									"ExchangeRates": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Capítulo 7"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-01T12:01:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ASQL_dboSalesLoad')]",
				"[concat(variables('factoryId'), '/dataflows/TransformJollyGoodSales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LookUp y ForEach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "List Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n  *\nFROM\n  AdfByexample.INFORMATION_SCHEMA.TABLES\nWHERE table_type = 'BASE TABLE'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "CdD_TableList",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List Tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Export Table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQLTable",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@item().table_schema",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CsVTable",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@concat(item().table_schema,'_',item().table_name,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-28T12:42:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CdD_TableList')]",
				"[concat(variables('factoryId'), '/datasets/SQLTable')]",
				"[concat(variables('factoryId'), '/datasets/CsVTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LookUp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EdadJugadores",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LookUp",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"origen": {},
									"origenedad": {},
									"destino": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SSIS_ADF"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-20T10:39:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/LookUp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Merge')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merged",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Mergeando",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Mayores1990": {},
									"Menores1990": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SSIS_ADF"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-20T11:56:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Mergeando')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MergeJoin')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "mergeJoin",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"edadjugadores": {},
									"Fifa": {},
									"destino": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SSIS_ADF"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-20T12:52:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/mergeJoin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/P_stateIncomeMappingDataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT_CPY_stateAbreviations",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "abbreviation",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Alabama",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StateName",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Ds_stateAbreviationCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_stateAbreviationParquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ACT_CPY_IncomeData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "STATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STATE",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "A02650",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "A02650",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_incomeDataCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_incomeDataParquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DFT_SalesTIncomeperStates",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ACT_CPY_stateAbreviations",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACT_CPY_IncomeData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DFT_StateIncomeMappingDataflow",
								"type": "DataFlowReference",
								"parameters": {
									"PipelineRunID": {
										"value": "'@{pipeline().RunId}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"StateAbreviation": {},
									"StateincomeData": {},
									"SinkSalesLT": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-07T12:42:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ds_stateAbreviationCSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_stateAbreviationParquet')]",
				"[concat(variables('factoryId'), '/datasets/DS_incomeDataCSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_incomeDataParquet')]",
				"[concat(variables('factoryId'), '/dataflows/DFT_StateIncomeMappingDataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/buscarPieforEachFIFA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PieEsp",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SSIS_ADF"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-16T12:36:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PieEsp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/callnotificationforteams')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "sendenotificationPassed",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADF Engineer Interview"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-22T11:07:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/sendenotificationPassed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/conditional if')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(pipeline().parameters.p_file,10)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "False Wait",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "True Wait",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"p_file": {
						"type": "int",
						"defaultValue": 10
					}
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-06T13:45:23Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/conditional_If3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								{
									"value": "@pipeline().parameters.filename",
									"type": "Expression"
								}
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@string(pipeline().parameters.filename)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "y",
										"value": {
											"value": "@string('vacío')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "x",
										"value": {
											"value": "@activity('Get Metadata1').output.childItems",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"variables": {
					"x": {
						"type": "String"
					},
					"y": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-15T10:27:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/conditional_if2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(pipeline().parameters.pnumber,10)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "False Wait",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "True Wait",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pnumber": {
						"type": "int",
						"defaultValue": 10
					}
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-15T08:39:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/deletemorethan1MB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "eliminar archivos mayores a 1 mega",
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ObtenerDatos",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get Metadata2",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "nombre_y_tamanio",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"itemName",
											"size"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('Get Metadata2').output.size,500000)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Delete1",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "deletemore1mb",
														"type": "DatasetReference",
														"parameters": {
															"delete": {
																"value": "@activity('Get Metadata2').output.itemName",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADF Engineer Interview"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-21T12:05:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ObtenerDatos')]",
				"[concat(variables('factoryId'), '/datasets/nombre_y_tamanio')]",
				"[concat(variables('factoryId'), '/datasets/deletemore1mb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/derivedColumn')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EdadJugadores",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LookUp",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"origen": {},
									"origenedad": {},
									"destino": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SSIS_ADF"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-20T10:39:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/LookUp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/eliminar5diasantiguaedad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "eliminar archivos con más de 5 días de antiguedad",
				"activities": [
					{
						"name": "Get Metadata1",
						"description": "verificamos todos los archivos que están en la carpeta de prueba.",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "obtenerArchivos",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get Metadata2",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ultimaModificacion",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"itemName",
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@less(activity('Get Metadata2').output.lastModified,\nformatDateTime(adddays(utcNow(),-5),'yyyy-MM-ddThh:mm:ssZ'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Delete1",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "Binary1",
														"type": "DatasetReference",
														"parameters": {
															"deletefile": {
																"value": "@activity('Get Metadata2').output.itemName",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADF Engineer Interview"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-21T10:37:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/obtenerArchivos')]",
				"[concat(variables('factoryId'), '/datasets/ultimaModificacion')]",
				"[concat(variables('factoryId'), '/datasets/Binary1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/leerHojasExcel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "csvhojas",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Excel1",
											"type": "DatasetReference",
											"parameters": {
												"sheetname": {
													"value": "@item().sheetname",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable2",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADF Engineer Interview"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-20T13:42:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csvhojas')]",
				"[concat(variables('factoryId'), '/datasets/Excel1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/moviecsv_a_moviecsv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "moviedatasetorigen",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "moviedatasetdestino",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Capítulo 2"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-23T16:46:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/moviedatasetorigen')]",
				"[concat(variables('factoryId'), '/datasets/moviedatasetdestino')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/muchas filas a una fila')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "multiplerowsInsingle",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "multiplerowsInsingle",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"origen": {},
									"destino": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADF Engineer Interview"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-23T11:17:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/multiplerowsInsingle')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineDB_a_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "migración de datos de una BD a un archivo csv",
				"activities": [
					{
						"name": "De BBDD a CSV",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Nombre",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Nombre",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NombreCompleto",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "NombreCompleto",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Club",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Club",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Liga",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Liga",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FechaNacimiento",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "FechaNacimiento",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AlturaCM",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AlturaCM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PesoKG",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PesoKG",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Nacionalidad",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Nacionalidad",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ValorEuropa",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "ValorEuropa",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PiePreferido",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PiePreferido",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CdD_SSIS_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CdD_SSIS_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SSIS_ADF"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-16T08:54:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CdD_SSIS_DB')]",
				"[concat(variables('factoryId'), '/datasets/CdD_SSIS_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineMovieDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowMovies",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MoviesADLS": {},
									"Destino": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-24T08:52:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflowMovies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_forEach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select distinct Name\nfrom Countries",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Country value",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Country",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Country": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-14T10:24:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"description": "de txt a csv",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_src_txt",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_Sink_txt",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-08T08:55:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_src_txt')]",
				"[concat(variables('factoryId'), '/datasets/ds_Sink_txt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_foreach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_input",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"itemName",
								"itemType"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_input",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_Sink_txt",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-08T13:12:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_input')]",
				"[concat(variables('factoryId'), '/datasets/ds_Sink_txt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sendenotificationPassed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "MessageCard",
							"value": {
								"value": "{\n    \"@type\": \"MessageCard\",\n    \"@context\": \"http://schema.org/extensions\",\n    \"themeColor\": \"0076D7\",\n    \"summary\": \"Pipeline status alert message​​​​\",\n    \"sections\": [\n        {\n            \"activityTitle\": \"Pipeline execution alert​​​​\",\n            \"facts\": [\n                {\n                    \"name\": \"Subscription Id:\",\n                    \"value\": \"@{pipeline().parameters.subscription}\"\n                },\n                {\n                    \"name\": \"Resource Group:\",\n                    \"value\": \"@{pipeline().parameters.resourceGroup}\"\n                },\n                {\n                    \"name\": \"Data Factory Name:\",\n                    \"value\": \"@{pipeline().DataFactory}\"\n                },\n                {\n                    \"name\": \"Pipeline RunId:\",\n                    \"value\": \"@{pipeline().parameters.runid}\"\n                },\n                {\n                    \"name\": \"Pipline Name:\",\n                    \"value\": \"@{pipeline().parameters.name}\"\n                },\n                {\n                    \"name\": \"Pipeline Status:\",\n                    \"value\": \"@{pipeline().parameters.status}\"\n                },\n                {\n                    \"name\": \"Execution Start Time (UTC):\",\n                    \"value\": \"@{pipeline().parameters.triggerTime}\"\n                },\n                {\n                    \"name\": \"Execution Finish Time (UTC):\",\n                    \"value\": \"@{pipeline().parameters.executionEndTime}\"\n                },\n                {\n                    \"name\": \"Execution Duration (s):\",\n                    \"value\": \"@{pipeline().parameters.runDuration}\"\n                },\n                {\n                    \"name\": \"Message:\",\n                    \"value\": \"@{pipeline().parameters.mesage}\"\n                },\n                {\n                    \"name\": \"Notification Time (UTC):\",\n                    \"value\": \"@{utcNow()}\"\n                }\n            ],\n            \"markdown\": true\n        }\n    ],\n    \"potentialAction\": [\n        {\n            \"@type\": \"OpenUri\",\n            \"name\": \"View pipeline run\",\n            \"targets\": [\n                {\n                    \"os\": \"default\",\n                    \"uri\": \"@{concat('https://adf.azure.com/monitoring/pipelineruns/',pipeline().parameters.runid,'?factory=/subscriptions/',pipeline().parameters.subscription,'/resourceGroups/',pipeline().parameters.resourceGroup,'/providers/Microsoft.DataFactory/factories/',pipeline().DataFactory)}\"\n                }\n            ]\n        }\n    ]\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "WebHook1",
						"type": "WebHook",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.teamwebhookurl",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@json(variables('MessageCard'))",
								"type": "Expression"
							},
							"timeout": "00:10:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"teamwebhookurl": {
						"type": "string",
						"defaultValue": "https://neoris0.webhook.office.com/webhookb2/057ea739-9164-4e72-8992-1ec964f6104d@0d37204a-f51c-4187-b869-028b3934a0b0/IncomingWebhook/00368ae6a2fc43bf94578c1fed13e6e5/6f4d3196-728a-4c84-84c1-b0c47d3d5025"
					},
					"name": {
						"type": "string",
						"defaultValue": "Test"
					},
					"triggerTime": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"defaultValue": "Testing"
					},
					"mesage": {
						"type": "string",
						"defaultValue": "This is executed with success"
					},
					"subscription": {
						"type": "string",
						"defaultValue": "82ba3da3-c519-455e-ae32-4016e105815b"
					},
					"resourceGroup": {
						"type": "string",
						"defaultValue": "NEORIS"
					},
					"runid": {
						"type": "string"
					},
					"executionEndTime": {
						"type": "string"
					},
					"runDuration": {
						"type": "string"
					}
				},
				"variables": {
					"MessageCard": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ADF Engineer Interview"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-22T09:57:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/una fila a muchas filas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "singleRowInMultiple",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADF Engineer Interview"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-24T11:53:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/singleRowInMultiple')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ABS_CSV_CandyShack')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Capítulo 3"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "2020-04.csv",
						"folderPath": "azure-data-factory-by-example-main/SampleData/CandyShack",
						"container": "sampledata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesMonth",
						"type": "String"
					},
					{
						"name": "Retailer",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "SalesValueUSD",
						"type": "String"
					},
					{
						"name": "UnitsSold",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ABS_CSV_Sweettreats')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Capítulo 3"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Sales.csv",
						"folderPath": "azure-data-factory-by-example-main/SampleData/SweetTreats/Apr-20",
						"container": "sampledata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesMonth",
						"type": "String"
					},
					{
						"name": "Retailer",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "SalesValueUSD",
						"type": "String"
					},
					{
						"name": "UnitsSold",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ABS_JSON_HandyCandy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Capítulo 3"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "00816cd4-0d98-4505-8b8f-8b3ba08aab31.json",
						"folderPath": "azure-data-factory-by-example-main/SampleData/HandyCandy",
						"container": "sampledata"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Month": {
							"type": "string"
						},
						"Company": {
							"type": "string"
						},
						"Sales": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Product": {
										"type": "string"
									},
									"ManufacturerProductCode": {
										"type": "string"
									},
									"Units": {
										"type": "integer"
									},
									"Value": {
										"type": "number"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ABS_JSON_Sugarcube')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Capítulo 3"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "April.json",
						"folderPath": "azure-data-factory-by-example-main/SampleData/SugarCube/2020/Q2",
						"container": "sampledata"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Month": {
							"type": "string"
						},
						"Company": {
							"type": "string"
						},
						"Sales": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Product": {
										"type": "string"
									},
									"ManufacturerProductCode": {
										"type": "string"
									},
									"Units": {
										"type": "integer"
									},
									"Value": {
										"type": "number"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_dboSalesLoad')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdfByExampleSql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Capítulo 3"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RowId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Retailer",
						"type": "nvarchar"
					},
					{
						"name": "SalesMonth",
						"type": "date"
					},
					{
						"name": "Product",
						"type": "nvarchar"
					},
					{
						"name": "ManufacturerProductCode",
						"type": "nvarchar"
					},
					{
						"name": "SalesValueUSD",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "UnitsSold",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SourceFileName",
						"type": "nvarchar"
					},
					{
						"name": "RunSeqNo",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Sales_LOAD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdfByExampleSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Archivoenhistorico')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "historicos"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseSinkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your destination data store.",
				"linkedServiceName": {
					"referenceName": "ConexionDestinoADLS_sql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sinkTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().sinkTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ConexionDestinoADLS_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdfByExampleSql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdfByExampleSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdfByExampleSql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": "EmployeeTbl"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdfByExampleSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ConexionDestinoADLS_sql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Ratings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ConexionDestinoADLS_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"deletefile": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().deletefile",
							"type": "Expression"
						},
						"container": "input"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CDS_ABS_PAR_HandyCandy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Capítulo 3"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HandyCandy.parquet",
						"folderPath": "datalake",
						"container": "output"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CdD_ABS_JSON_adfbyexamplesa1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Contenedor": {
						"type": "string"
					},
					"Directorio": {
						"type": "string",
						"defaultValue": "."
					},
					"Archivo": {
						"type": "string",
						"defaultValue": "."
					}
				},
				"folder": {
					"name": "Capítulo 5"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().Archivo",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directorio",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Contenedor",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CdD_Customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Customerdeatails.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmpName",
						"type": "String"
					},
					{
						"name": "empAdd",
						"type": "String"
					},
					{
						"name": "Deptname",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CdD_ExcelTipodeCambio')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ExchangeRates.xlsx",
						"folderPath": "azure-data-factory-by-example-main/SampleData",
						"container": "sampledata"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "FromCurrency",
						"type": "String"
					},
					{
						"name": "ToCurrency",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "ExchangeRate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CdD_Jolly_Excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "SALES",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Sales Apr-Sep 2020.xlsx",
						"folderPath": "azure-data-factory-by-example-main/SampleData/JollyGood",
						"container": "sampledata"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Period",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Currency",
						"type": "String"
					},
					{
						"name": "Units Sold",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CdD_Loadingerror')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdfByExampleSql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Capítulo 6"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Timestamp",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "OperationName",
						"type": "nvarchar"
					},
					{
						"name": "OperationItem",
						"type": "nvarchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "LoadingError"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdfByExampleSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CdD_Movies_ADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ConexionOrigeADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "MoviesDB.csv",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Rotton Tomato",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ConexionOrigeADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CdD_SQLProduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdfByExampleSql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Capítulo 7"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Product",
						"type": "nvarchar"
					},
					{
						"name": "ProductName",
						"type": "nvarchar"
					},
					{
						"name": "WeightInOunces",
						"type": "decimal",
						"precision": 19,
						"scale": 2
					},
					{
						"name": "WeightInGrams",
						"type": "decimal",
						"precision": 19,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdfByExampleSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CdD_SQLSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdfByExampleSql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Capítulo 7"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RowId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Retailer",
						"type": "nvarchar"
					},
					{
						"name": "SalesMonth",
						"type": "date"
					},
					{
						"name": "Product",
						"type": "nvarchar"
					},
					{
						"name": "SalesValueUSD",
						"type": "decimal",
						"precision": 19,
						"scale": 2
					},
					{
						"name": "UnitsSold",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RunSeqNo",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Sales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdfByExampleSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CdD_SSIS_DB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LnkSSIS_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SSIS_ADF"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Nombre",
						"type": "varchar"
					},
					{
						"name": "NombreCompleto",
						"type": "varchar"
					},
					{
						"name": "Club",
						"type": "varchar"
					},
					{
						"name": "Liga",
						"type": "varchar"
					},
					{
						"name": "FechaNacimiento",
						"type": "date"
					},
					{
						"name": "AlturaCM",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PesoKG",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Nacionalidad",
						"type": "varchar"
					},
					{
						"name": "ValorEuropa",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PiePreferido",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FIFA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LnkSSIS_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CdD_SSIS_DB_destino')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LnkSSIS_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SSIS_ADF"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Nombre",
						"type": "varchar"
					},
					{
						"name": "NombreCompleto",
						"type": "varchar"
					},
					{
						"name": "Club",
						"type": "varchar"
					},
					{
						"name": "Liga",
						"type": "varchar"
					},
					{
						"name": "FechaNacimiento",
						"type": "date"
					},
					{
						"name": "AlturaCM",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PesoKG",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Nacionalidad",
						"type": "varchar"
					},
					{
						"name": "ValorEuropa",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PiePreferido",
						"type": "varchar"
					},
					{
						"name": "PieEsp",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FIFA_destino"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LnkSSIS_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CdD_SSIS_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLnkSSIS_csv",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SSIS_ADF"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "ssis"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLnkSSIS_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CdD_TableList')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LookUpDemosSql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LookUpDemosSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CdD_VideoGamesSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdfByExampleSql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Month",
						"type": "nvarchar"
					},
					{
						"name": "Day",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "Platform",
						"type": "nvarchar"
					},
					{
						"name": "Genre",
						"type": "nvarchar"
					},
					{
						"name": "Developer",
						"type": "nvarchar"
					},
					{
						"name": "Publisher",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "videoGames_2022"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdfByExampleSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CdD_destino_Dimensiones')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "destino genérico parametrizado",
				"linkedServiceName": {
					"referenceName": "conexionDestinoADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filename": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().Filename",
							"type": "Expression"
						},
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/conexionDestinoADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CdD_origen_SQLDimensiones')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "origen genérico parametrizado",
				"linkedServiceName": {
					"referenceName": "LNK_DB_AW19_origenADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "SalesLT",
					"table": {
						"value": "@dataset().Tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LNK_DB_AW19_origenADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CdD_videoGames2022')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "video-games-2022.csv",
						"container": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Month",
						"type": "String"
					},
					{
						"name": "Day",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "Platform(s)",
						"type": "String"
					},
					{
						"name": "Genre(s)",
						"type": "String"
					},
					{
						"name": "Developer(s)",
						"type": "String"
					},
					{
						"name": "Publisher(s)",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CsVTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"container": "exported-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_Customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdfByExampleSql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmpName",
						"type": "varchar"
					},
					{
						"name": "EmpAdd",
						"type": "nvarchar"
					},
					{
						"name": "DeptName",
						"type": "nvarchar"
					},
					{
						"name": "Gender",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CustomerDetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdfByExampleSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_edadJugadores')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LnkSSIS_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NombreCompleto",
						"type": "varchar"
					},
					{
						"name": "Edad",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "edadjugadores"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LnkSSIS_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_edadNacimientoJugadores')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LnkSSIS_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NombreCompleto",
						"type": "varchar"
					},
					{
						"name": "Edad",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FechaNacimiento",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EdadnacimientoJugadores"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LnkSSIS_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_fifaMerged')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LnkSSIS_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NombreCompleto",
						"type": "nvarchar"
					},
					{
						"name": "FechaNacimiento",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FIFAMerged"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LnkSSIS_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SalesIncomesPerStates')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdfByExampleSql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "StateAbbreviation",
						"type": "nvarchar"
					},
					{
						"name": "Statename",
						"type": "nvarchar"
					},
					{
						"name": "StateIncome",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "BatchID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "IncomesPerState"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdfByExampleSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_incomeDataCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LNK_statesIncomeData",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "17zpallnoagi.csv",
						"container": "cookbookorigen"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "STATEFIPS",
						"type": "String"
					},
					{
						"name": "STATE",
						"type": "String"
					},
					{
						"name": "ZIPCODE",
						"type": "String"
					},
					{
						"name": "AGI_STUB",
						"type": "String"
					},
					{
						"name": "N1",
						"type": "String"
					},
					{
						"name": "MARS1",
						"type": "String"
					},
					{
						"name": "MARS2",
						"type": "String"
					},
					{
						"name": "MARS4",
						"type": "String"
					},
					{
						"name": "ELF",
						"type": "String"
					},
					{
						"name": "CPREP",
						"type": "String"
					},
					{
						"name": "PREP",
						"type": "String"
					},
					{
						"name": "DIR_DEP",
						"type": "String"
					},
					{
						"name": "N2",
						"type": "String"
					},
					{
						"name": "NUMDEP",
						"type": "String"
					},
					{
						"name": "TOTAL_VITA",
						"type": "String"
					},
					{
						"name": "VITA",
						"type": "String"
					},
					{
						"name": "TCE",
						"type": "String"
					},
					{
						"name": "VITA_EIC",
						"type": "String"
					},
					{
						"name": "RAC",
						"type": "String"
					},
					{
						"name": "ELDERLY",
						"type": "String"
					},
					{
						"name": "A00100",
						"type": "String"
					},
					{
						"name": "N02650",
						"type": "String"
					},
					{
						"name": "A02650",
						"type": "String"
					},
					{
						"name": "N00200",
						"type": "String"
					},
					{
						"name": "A00200",
						"type": "String"
					},
					{
						"name": "N00300",
						"type": "String"
					},
					{
						"name": "A00300",
						"type": "String"
					},
					{
						"name": "N00600",
						"type": "String"
					},
					{
						"name": "A00600",
						"type": "String"
					},
					{
						"name": "N00650",
						"type": "String"
					},
					{
						"name": "A00650",
						"type": "String"
					},
					{
						"name": "N00700",
						"type": "String"
					},
					{
						"name": "A00700",
						"type": "String"
					},
					{
						"name": "N00900",
						"type": "String"
					},
					{
						"name": "A00900",
						"type": "String"
					},
					{
						"name": "N01000",
						"type": "String"
					},
					{
						"name": "A01000",
						"type": "String"
					},
					{
						"name": "N01400",
						"type": "String"
					},
					{
						"name": "A01400",
						"type": "String"
					},
					{
						"name": "N01700",
						"type": "String"
					},
					{
						"name": "A01700",
						"type": "String"
					},
					{
						"name": "SCHF",
						"type": "String"
					},
					{
						"name": "N02300",
						"type": "String"
					},
					{
						"name": "A02300",
						"type": "String"
					},
					{
						"name": "N02500",
						"type": "String"
					},
					{
						"name": "A02500",
						"type": "String"
					},
					{
						"name": "N26270",
						"type": "String"
					},
					{
						"name": "A26270",
						"type": "String"
					},
					{
						"name": "N02900",
						"type": "String"
					},
					{
						"name": "A02900",
						"type": "String"
					},
					{
						"name": "N03220",
						"type": "String"
					},
					{
						"name": "A03220",
						"type": "String"
					},
					{
						"name": "N03300",
						"type": "String"
					},
					{
						"name": "A03300",
						"type": "String"
					},
					{
						"name": "N03270",
						"type": "String"
					},
					{
						"name": "A03270",
						"type": "String"
					},
					{
						"name": "N03150",
						"type": "String"
					},
					{
						"name": "A03150",
						"type": "String"
					},
					{
						"name": "N03210",
						"type": "String"
					},
					{
						"name": "A03210",
						"type": "String"
					},
					{
						"name": "N03230",
						"type": "String"
					},
					{
						"name": "A03230",
						"type": "String"
					},
					{
						"name": "N03240",
						"type": "String"
					},
					{
						"name": "A03240",
						"type": "String"
					},
					{
						"name": "N04470",
						"type": "String"
					},
					{
						"name": "A04470",
						"type": "String"
					},
					{
						"name": "A00101",
						"type": "String"
					},
					{
						"name": "N17000",
						"type": "String"
					},
					{
						"name": "A17000",
						"type": "String"
					},
					{
						"name": "N18425",
						"type": "String"
					},
					{
						"name": "A18425",
						"type": "String"
					},
					{
						"name": "N18450",
						"type": "String"
					},
					{
						"name": "A18450",
						"type": "String"
					},
					{
						"name": "N18500",
						"type": "String"
					},
					{
						"name": "A18500",
						"type": "String"
					},
					{
						"name": "N18800",
						"type": "String"
					},
					{
						"name": "A18800",
						"type": "String"
					},
					{
						"name": "N18300",
						"type": "String"
					},
					{
						"name": "A18300",
						"type": "String"
					},
					{
						"name": "N19300",
						"type": "String"
					},
					{
						"name": "A19300",
						"type": "String"
					},
					{
						"name": "N19500",
						"type": "String"
					},
					{
						"name": "A19500",
						"type": "String"
					},
					{
						"name": "N19530",
						"type": "String"
					},
					{
						"name": "A19530",
						"type": "String"
					},
					{
						"name": "N19550",
						"type": "String"
					},
					{
						"name": "A19550",
						"type": "String"
					},
					{
						"name": "N19570",
						"type": "String"
					},
					{
						"name": "A19570",
						"type": "String"
					},
					{
						"name": "N19700",
						"type": "String"
					},
					{
						"name": "A19700",
						"type": "String"
					},
					{
						"name": "N20800",
						"type": "String"
					},
					{
						"name": "A20800",
						"type": "String"
					},
					{
						"name": "N20950",
						"type": "String"
					},
					{
						"name": "A20950",
						"type": "String"
					},
					{
						"name": "N04800",
						"type": "String"
					},
					{
						"name": "A04800",
						"type": "String"
					},
					{
						"name": "N05800",
						"type": "String"
					},
					{
						"name": "A05800",
						"type": "String"
					},
					{
						"name": "N09600",
						"type": "String"
					},
					{
						"name": "A09600",
						"type": "String"
					},
					{
						"name": "N05780",
						"type": "String"
					},
					{
						"name": "A05780",
						"type": "String"
					},
					{
						"name": "N07100",
						"type": "String"
					},
					{
						"name": "A07100",
						"type": "String"
					},
					{
						"name": "N07300",
						"type": "String"
					},
					{
						"name": "A07300",
						"type": "String"
					},
					{
						"name": "N07180",
						"type": "String"
					},
					{
						"name": "A07180",
						"type": "String"
					},
					{
						"name": "N07230",
						"type": "String"
					},
					{
						"name": "A07230",
						"type": "String"
					},
					{
						"name": "N07240",
						"type": "String"
					},
					{
						"name": "A07240",
						"type": "String"
					},
					{
						"name": "N07220",
						"type": "String"
					},
					{
						"name": "A07220",
						"type": "String"
					},
					{
						"name": "N07260",
						"type": "String"
					},
					{
						"name": "A07260",
						"type": "String"
					},
					{
						"name": "N09400",
						"type": "String"
					},
					{
						"name": "A09400",
						"type": "String"
					},
					{
						"name": "N85770",
						"type": "String"
					},
					{
						"name": "A85770",
						"type": "String"
					},
					{
						"name": "N85775",
						"type": "String"
					},
					{
						"name": "A85775",
						"type": "String"
					},
					{
						"name": "N09750",
						"type": "String"
					},
					{
						"name": "A09750",
						"type": "String"
					},
					{
						"name": "N10600",
						"type": "String"
					},
					{
						"name": "A10600",
						"type": "String"
					},
					{
						"name": "N59660",
						"type": "String"
					},
					{
						"name": "A59660",
						"type": "String"
					},
					{
						"name": "N59720",
						"type": "String"
					},
					{
						"name": "A59720",
						"type": "String"
					},
					{
						"name": "N11070",
						"type": "String"
					},
					{
						"name": "A11070",
						"type": "String"
					},
					{
						"name": "N10960",
						"type": "String"
					},
					{
						"name": "A10960",
						"type": "String"
					},
					{
						"name": "N11560",
						"type": "String"
					},
					{
						"name": "A11560",
						"type": "String"
					},
					{
						"name": "N06500",
						"type": "String"
					},
					{
						"name": "A06500",
						"type": "String"
					},
					{
						"name": "N10300",
						"type": "String"
					},
					{
						"name": "A10300",
						"type": "String"
					},
					{
						"name": "N85530",
						"type": "String"
					},
					{
						"name": "A85530",
						"type": "String"
					},
					{
						"name": "N85300",
						"type": "String"
					},
					{
						"name": "A85300",
						"type": "String"
					},
					{
						"name": "N11901",
						"type": "String"
					},
					{
						"name": "A11901",
						"type": "String"
					},
					{
						"name": "N11900",
						"type": "String"
					},
					{
						"name": "A11900",
						"type": "String"
					},
					{
						"name": "N11902",
						"type": "String"
					},
					{
						"name": "A11902",
						"type": "String"
					},
					{
						"name": "N12000",
						"type": "String"
					},
					{
						"name": "A12000",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LNK_statesIncomeData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_incomeDataParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LNK_ETLinAzure",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "destparqtwo",
						"container": "cookbookdestino"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LNK_ETLinAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_stateAbreviationParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LNK_ETLinAzure",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "destParq",
						"container": "cookbookdestino"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LNK_ETLinAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OrigengenericoADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Colores.csv",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ItemId",
						"type": "String"
					},
					{
						"name": "VartId",
						"type": "String"
					},
					{
						"name": "ItemName",
						"type": "String"
					},
					{
						"name": "Vartname",
						"type": "String"
					},
					{
						"name": "WhNo",
						"type": "String"
					},
					{
						"name": "zone",
						"type": "String"
					},
					{
						"name": "Bin",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OrigengenericoADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "conexionDestinoADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "NameStyle",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "MiddleName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Suffix",
						"type": "String"
					},
					{
						"name": "CompanyName",
						"type": "String"
					},
					{
						"name": "SalesPerson",
						"type": "String"
					},
					{
						"name": "EmailAddress",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "PasswordHash",
						"type": "String"
					},
					{
						"name": "PasswordSalt",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/conexionDestinoADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_ocx')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "conexionDestinoADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "destinomaster"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/conexionDestinoADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_yj1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Capítulo 2"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "sampledata"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_stateAbreviationCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LNK_Abbreviations",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "abbr-name.csv",
						"container": "cookbookorigen"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AL",
						"type": "String"
					},
					{
						"name": "Alabama",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LNK_Abbreviations')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sheetname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().sheetname",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "empleados.xlsx",
						"container": "input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "DOB",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FIFA_destino')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LnkSSIS_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Nombre",
						"type": "varchar"
					},
					{
						"name": "NombreCompleto",
						"type": "varchar"
					},
					{
						"name": "Club",
						"type": "varchar"
					},
					{
						"name": "Liga",
						"type": "varchar"
					},
					{
						"name": "FechaNacimiento",
						"type": "date"
					},
					{
						"name": "AlturaCM",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PesoKG",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Nacionalidad",
						"type": "varchar"
					},
					{
						"name": "ValorEuropa",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PiePreferido",
						"type": "varchar"
					},
					{
						"name": "PieEsp",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FIFA_destino"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LnkSSIS_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMetadataDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your source data store.",
				"linkedServiceName": {
					"referenceName": "conexionOrigenADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceContainer": {
						"type": "string"
					},
					"SourceDirectory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().SourceDirectory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().SourceContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/conexionOrigenADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MenorOigual1990')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LnkSSIS_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NombreCompleto",
						"type": "nvarchar"
					},
					{
						"name": "FechaNacimiento",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Menores1990"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LnkSSIS_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ObtenerDatos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "mas1mega"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SheetName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LookUpDemosSql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Varios"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LookUpDemosSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your source data store.",
				"linkedServiceName": {
					"referenceName": "conexionOrigenADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"SourceContainer": {
						"type": "string"
					},
					"SourceDirectory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().SourceDirectory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().SourceContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/conexionOrigenADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_ocx')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ConexionOrigeADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "azure-data-factory-by-example-main.zip",
						"fileSystem": "master"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ConexionOrigeADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_yj1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Capítulo 2"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "azure-data-factory-by-example-main.zip",
						"container": "landing"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aBs_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Contenedor": {
						"type": "string"
					},
					"Directorio": {
						"type": "string",
						"defaultValue": "."
					},
					"Archivo": {
						"type": "string",
						"defaultValue": "."
					}
				},
				"folder": {
					"name": "Capítulo 5"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().Archivo",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directorio",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Contenedor",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csvhojas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Config.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SheetName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datos_origen')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "datos.csv",
						"container": "hkb"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "NUMERICID",
						"type": "String"
					},
					{
						"name": "QUALITY",
						"type": "String"
					},
					{
						"name": "TIMESTAMP",
						"type": "String"
					},
					{
						"name": "VALUE",
						"type": "String"
					},
					{
						"name": "CREACION",
						"type": "String"
					},
					{
						"name": "ACTUALIZACION",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/deletemore1mb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"delete": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().delete",
							"type": "Expression"
						},
						"container": "mas1mega"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/destino_jugadoresPornacionalidad')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "JugadoresPorNacionalidad",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Nacionalidad",
						"type": "varchar"
					},
					{
						"name": "CantidadJugadores",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "JugadoresPornacinalidad"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/JugadoresPorNacionalidad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/destino_promedio')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "promedios",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PiePref",
						"type": "varchar"
					},
					{
						"name": "PromedioPesoKG",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Promedios"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/promedios')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Sink_txt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_txt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "fsdemo-output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_txt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_txt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "fsdemo-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_txt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_src_txt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_txt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "src.txt",
						"container": "fsdemo-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_txt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/hkbDestino')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdfByExampleSql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ID_HKB",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "NAME",
						"type": "nvarchar"
					},
					{
						"name": "NUMERICID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QUALITY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TIMESTAMP",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "VALUE",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "FLG_ACTV",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "FECHA_INI_ACTV",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "FECHA_FIN_ACTV",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ETL_DATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CREATE_ID_WKF",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UPDATE_ID_WKF",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "DELETE_ID_WKF",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CREATE_DATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UPDATE_DATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DELETE_DATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CREATE_USER",
						"type": "nvarchar"
					},
					{
						"name": "UPDATE_USER",
						"type": "nvarchar"
					},
					{
						"name": "DELETE_USER",
						"type": "nvarchar"
					},
					{
						"name": "MD5_CHECKSUM",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "destino_HKB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdfByExampleSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/mayor1990')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LnkSSIS_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NombreCompleto",
						"type": "nvarchar"
					},
					{
						"name": "FechaNacimiento",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Mayores1990"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LnkSSIS_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/moviedatasetdestino')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "moviesBlobstorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Capítulo 2"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/moviesBlobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/moviedatasetorigen')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "moviesBlobstorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Capítulo 2"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MoviesDB.csv",
						"container": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Rotton Tomato",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/moviesBlobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nombre_y_tamanio')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"container": "mas1mega"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SheetName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/obtenerArchivos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SheetName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/origenColores2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ConexionOrigeADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "colores2.csv",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ItemId",
						"type": "String"
					},
					{
						"name": "ItemName",
						"type": "String"
					},
					{
						"name": "Vartname",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ConexionOrigeADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ultimaModificacion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfbyexmplesa1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SheetName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfbyexmplesa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdfByExampleSql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "base de datos de AdfByExampleSql",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AdfByExampleSql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorageLnkSSIS_csv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "servicio del storageblob donde va a ir el archivo csv",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorageLnkSSIS_csv_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage_txt')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_txt_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConexionDestinoADLS_sql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ConexionDestinoADLS_sql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConexionOrigeADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "el mismo copydata pero con adls",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ConexionOrigeADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ConexionOrigeADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/JugadoresPorNacionalidad')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('JugadoresPorNacionalidad_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LNK_Abbreviations')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LNK_Abbreviations_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LNK_DB_AW19_origenADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LNK_DB_AW19_origenADLS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LNK_ETLinAzure')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LNK_ETLinAzure_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LNK_statesIncomeData')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LNK_statesIncomeData_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LnkSSIS_DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "servicio a la BD fifa origen",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LnkSSIS_DB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LookUpDemosSql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LookUpDemosSql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OrigengenericoADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('OrigengenericoADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('OrigengenericoADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfbyexample')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('adfbyexample_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfbyexamplesa')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "blob storage en \"adfbyexamplesa\" cuenta de almacenamiento",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('adfbyexamplesa_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfbyexmplesa1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('adfbyexmplesa1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/conexionDestinoADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('conexionDestinoADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('conexionDestinoADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/conexionOrigenADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('conexionOrigenADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('conexionOrigenADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/destinogenericoADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('destinogenericoADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('destinogenericoADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/moviesBlobstorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('moviesBlobstorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/promedios')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('promedios_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CRUD')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "datos_origen",
								"type": "DatasetReference"
							},
							"name": "hkbOrigen"
						},
						{
							"dataset": {
								"referenceName": "hkbDestino",
								"type": "DatasetReference"
							},
							"name": "hkbDestino"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "hkbDestino",
								"type": "DatasetReference"
							},
							"name": "destinoH"
						},
						{
							"dataset": {
								"referenceName": "hkbDestino",
								"type": "DatasetReference"
							},
							"name": "destinoK"
						},
						{
							"dataset": {
								"referenceName": "hkbDestino",
								"type": "DatasetReference"
							},
							"name": "destinoB"
						}
					],
					"transformations": [
						{
							"name": "md5"
						},
						{
							"name": "select1"
						},
						{
							"name": "ordenar1"
						},
						{
							"name": "select2"
						},
						{
							"name": "ordenar2"
						},
						{
							"name": "FullMergejoin"
						},
						{
							"name": "conditionalSplit"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterNEW"
						},
						{
							"name": "fechaFin"
						},
						{
							"name": "alterDelete"
						},
						{
							"name": "fechamodificacion"
						},
						{
							"name": "alterChange"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as long,",
						"          NAME as string,",
						"          NUMERICID as integer,",
						"          QUALITY as integer,",
						"          TIMESTAMP as timestamp,",
						"          VALUE as double,",
						"          CREACION as timestamp,",
						"          ACTUALIZACION as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> hkbOrigen",
						"source(output(",
						"          ID as long,",
						"          ID_HKB as long,",
						"          NAME as string,",
						"          NUMERICID as integer,",
						"          QUALITY as integer,",
						"          TIMESTAMP as timestamp,",
						"          VALUE as decimal(18,2),",
						"          FLG_ACTV as integer,",
						"          FECHA_INI_ACTV as timestamp,",
						"          FECHA_FIN_ACTV as timestamp,",
						"          ETL_DATE as timestamp,",
						"          CREATE_ID_WKF as long,",
						"          UPDATE_ID_WKF as long,",
						"          DELETE_ID_WKF as long,",
						"          CREATE_DATE as timestamp,",
						"          UPDATE_DATE as timestamp,",
						"          DELETE_DATE as timestamp,",
						"          CREATE_USER as string,",
						"          UPDATE_USER as string,",
						"          DELETE_USER as string,",
						"          MD5_CHECKSUM as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'select * from destino_HKB\\nwhere flg_actv =1',",
						"     format: 'query') ~> hkbDestino",
						"hkbOrigen derive(MD5_CHECKSUM = md5(NAME,NUMERICID,QUALITY,TIMESTAMP,VALUE,CREACION,ACTUALIZACION)) ~> md5",
						"md5 select(mapColumn(",
						"          O_ID = ID,",
						"          O_NAME = NAME,",
						"          O_NUMERICID = NUMERICID,",
						"          O_QUALITY = QUALITY,",
						"          O_TIMESTAMP = TIMESTAMP,",
						"          O_VALUE = VALUE,",
						"          O_CREACION = CREACION,",
						"          O_ACTUALIZACION = ACTUALIZACION,",
						"          O_MD5_CHECKSUM = MD5_CHECKSUM",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sort(asc(O_TIMESTAMP, true)) ~> ordenar1",
						"hkbDestino select(mapColumn(",
						"          D_ID = ID,",
						"          D_ID_HKB = ID_HKB,",
						"          D_NAME = NAME,",
						"          D_NUMERICID = NUMERICID,",
						"          D_QUALITY = QUALITY,",
						"          D_TIMESTAMP = TIMESTAMP,",
						"          D_VALUE = VALUE,",
						"          D_FLG_ACTV = FLG_ACTV,",
						"          D_FECHA_INI_ACTV = FECHA_INI_ACTV,",
						"          D_FECHA_FIN_ACTV = FECHA_FIN_ACTV,",
						"          D_ETL_DATE = ETL_DATE,",
						"          D_CREATE_ID_WKF = CREATE_ID_WKF,",
						"          D_UPDATE_ID_WKF = UPDATE_ID_WKF,",
						"          D_DELETE_ID_WKF = DELETE_ID_WKF,",
						"          D_CREATE_DATE = CREATE_DATE,",
						"          D_UPDATE_DATE = UPDATE_DATE,",
						"          D_DELETE_DATE = DELETE_DATE,",
						"          D_CREATE_USER = CREATE_USER,",
						"          D_UPDATE_USER = UPDATE_USER,",
						"          D_DELETE_USER = DELETE_USER,",
						"          D_MD5_CHECKSUM = MD5_CHECKSUM",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select2 sort(asc(D_TIMESTAMP, true)) ~> ordenar2",
						"ordenar1, ordenar2 join(O_TIMESTAMP == D_TIMESTAMP,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> FullMergejoin",
						"FullMergejoin split(isNull(D_ID_HKB),",
						"     isNull(O_ID),",
						"     iif(O_MD5_CHECKSUM!=D_MD5_CHECKSUM, true(), false()),",
						"     disjoint: false) ~> conditionalSplit@(New, Delete, Change)",
						"conditionalSplit@New derive(D_FLG_ACTV = 1,",
						"          D_FECHA_INI_ACTV = fromUTC(currentTimestamp(), \"Europe/Madrid\"),",
						"          D_ETL_DATE = fromUTC(currentTimestamp(), \"Europe/Madrid\"),",
						"          D_CREATE_DATE = fromUTC(currentTimestamp(), \"Europe/Madrid\"),",
						"          D_CREATE_USER = \"AQ_AZURE\") ~> derivedColumn1",
						"conditionalSplit@New alterRow(insertIf(true())) ~> alterNEW",
						"conditionalSplit@Delete derive(D_DELETE_DATE = fromUTC(currentTimestamp(), \"Europe/Madrid\")) ~> fechaFin",
						"fechaFin alterRow(updateIf(true())) ~> alterDelete",
						"conditionalSplit@Change derive(D_FLG_ACTV = 0,",
						"          D_FECHA_FIN_ACTV = fromUTC(currentTimestamp(), \"Europe/Madrid\"),",
						"          D_ETL_DATE = fromUTC(currentTimestamp(), \"Europe/Madrid\"),",
						"          D_UPDATE_DATE = fromUTC(currentTimestamp(), \"Europe/Madrid\"),",
						"          D_UPDATE_USER = \"AQ_AZURE\") ~> fechamodificacion",
						"fechamodificacion alterRow(updateIf(true())) ~> alterChange",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as long,",
						"          ID_HKB as long,",
						"          NAME as string,",
						"          NUMERICID as integer,",
						"          QUALITY as integer,",
						"          TIMESTAMP as timestamp,",
						"          VALUE as decimal(18,2),",
						"          FLG_ACTV as integer,",
						"          FECHA_INI_ACTV as timestamp,",
						"          FECHA_FIN_ACTV as timestamp,",
						"          ETL_DATE as timestamp,",
						"          CREATE_ID_WKF as long,",
						"          UPDATE_ID_WKF as long,",
						"          DELETE_ID_WKF as long,",
						"          CREATE_DATE as timestamp,",
						"          UPDATE_DATE as timestamp,",
						"          DELETE_DATE as timestamp,",
						"          CREATE_USER as string,",
						"          UPDATE_USER as string,",
						"          DELETE_USER as string,",
						"          MD5_CHECKSUM as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID_HKB = O_ID,",
						"          NAME = O_NAME,",
						"          NUMERICID = O_NUMERICID,",
						"          QUALITY = O_QUALITY,",
						"          TIMESTAMP = O_TIMESTAMP,",
						"          VALUE = O_VALUE,",
						"          FLG_ACTV = D_FLG_ACTV,",
						"          FECHA_INI_ACTV = D_FECHA_INI_ACTV,",
						"          ETL_DATE = D_ETL_DATE,",
						"          CREATE_DATE = D_CREATE_DATE,",
						"          CREATE_USER = D_CREATE_USER,",
						"          UPDATE_USER = D_UPDATE_USER,",
						"          MD5_CHECKSUM = O_MD5_CHECKSUM",
						"     )) ~> destinoH",
						"alterDelete sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as long,",
						"          ID_HKB as long,",
						"          NAME as string,",
						"          NUMERICID as integer,",
						"          QUALITY as integer,",
						"          TIMESTAMP as timestamp,",
						"          VALUE as decimal(18,2),",
						"          FLG_ACTV as integer,",
						"          FECHA_INI_ACTV as timestamp,",
						"          FECHA_FIN_ACTV as timestamp,",
						"          ETL_DATE as timestamp,",
						"          CREATE_ID_WKF as long,",
						"          UPDATE_ID_WKF as long,",
						"          DELETE_ID_WKF as long,",
						"          CREATE_DATE as timestamp,",
						"          UPDATE_DATE as timestamp,",
						"          DELETE_DATE as timestamp,",
						"          CREATE_USER as string,",
						"          UPDATE_USER as string,",
						"          DELETE_USER as string,",
						"          MD5_CHECKSUM as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID_HKB = D_ID,",
						"          DELETE_DATE = D_DELETE_DATE",
						"     )) ~> destinoK",
						"alterChange sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as long,",
						"          ID_HKB as long,",
						"          NAME as string,",
						"          NUMERICID as integer,",
						"          QUALITY as integer,",
						"          TIMESTAMP as timestamp,",
						"          VALUE as decimal(18,2),",
						"          FLG_ACTV as integer,",
						"          FECHA_INI_ACTV as timestamp,",
						"          FECHA_FIN_ACTV as timestamp,",
						"          ETL_DATE as timestamp,",
						"          CREATE_ID_WKF as long,",
						"          UPDATE_ID_WKF as long,",
						"          DELETE_ID_WKF as long,",
						"          CREATE_DATE as timestamp,",
						"          UPDATE_DATE as timestamp,",
						"          DELETE_DATE as timestamp,",
						"          CREATE_USER as string,",
						"          UPDATE_USER as string,",
						"          DELETE_USER as string,",
						"          MD5_CHECKSUM as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID_HKB = D_ID_HKB,",
						"          FLG_ACTV = D_FLG_ACTV,",
						"          FECHA_FIN_ACTV = D_FECHA_FIN_ACTV,",
						"          ETL_DATE = D_ETL_DATE,",
						"          UPDATE_DATE = D_UPDATE_DATE,",
						"          UPDATE_USER = D_UPDATE_USER,",
						"          MD5_CHECKSUM = O_MD5_CHECKSUM",
						"     )) ~> destinoB"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/datos_origen')]",
				"[concat(variables('factoryId'), '/datasets/hkbDestino')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CondicionSiNoEdad')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SSIS"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CdD_SSIS_DB",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "mayor1990",
								"type": "DatasetReference"
							},
							"name": "mayores1990"
						},
						{
							"dataset": {
								"referenceName": "MenorOigual1990",
								"type": "DatasetReference"
							},
							"name": "Menores1990"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "split1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as integer,",
						"          Nombre as string,",
						"          NombreCompleto as string,",
						"          Club as string,",
						"          Liga as string,",
						"          FechaNacimiento as date,",
						"          AlturaCM as integer,",
						"          PesoKG as integer,",
						"          Nacionalidad as string,",
						"          ValorEuropa as double,",
						"          PiePreferido as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 select(mapColumn(",
						"          ID,",
						"          NombreCompleto,",
						"          FechaNacimiento",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 split(year(FechaNacimiento) > 1990,",
						"     disjoint: false) ~> split1@(Mayor1990, MenorOigual1990)",
						"split1@Mayor1990 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          NombreCompleto as string,",
						"          FechaNacimiento as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> mayores1990",
						"split1@MenorOigual1990 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          NombreCompleto as string,",
						"          FechaNacimiento as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> Menores1990"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CdD_SSIS_DB')]",
				"[concat(variables('factoryId'), '/datasets/mayor1990')]",
				"[concat(variables('factoryId'), '/datasets/MenorOigual1990')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DFT_StateIncomeMappingDataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_stateAbreviationParquet",
								"type": "DatasetReference"
							},
							"name": "StateAbreviation"
						},
						{
							"dataset": {
								"referenceName": "DS_incomeDataParquet",
								"type": "DatasetReference"
							},
							"name": "StateincomeData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SalesIncomesPerStates",
								"type": "DatasetReference"
							},
							"name": "SinkSalesLT"
						}
					],
					"transformations": [
						{
							"name": "LKPStateAbbreviation"
						},
						{
							"name": "DERStateIncomePipelineRunID"
						},
						{
							"name": "SELRemoveUnosedColumns"
						},
						{
							"name": "AGGStateIncome"
						}
					],
					"scriptLines": [
						"parameters{",
						"     PipelineRunID as string (\"No parameter value\")",
						"}",
						"source(output(",
						"          abbreviation as string,",
						"          StateName as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> StateAbreviation",
						"source(output(",
						"          STATE as string,",
						"          A02650 as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> StateincomeData",
						"StateincomeData, StateAbreviation lookup(STATE == abbreviation,",
						"     multiple: false,",
						"     pickup: 'first',",
						"     asc(StateName, true),",
						"     broadcast: 'right')~> LKPStateAbbreviation",
						"LKPStateAbbreviation derive(StateIncome = toLong(A02650),",
						"          PipeLineRunID = $PipelineRunID) ~> DERStateIncomePipelineRunID",
						"DERStateIncomePipelineRunID select(mapColumn(",
						"          abbreviation,",
						"          StateName,",
						"          StateIncome,",
						"          PipeLineRunID",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SELRemoveUnosedColumns",
						"SELRemoveUnosedColumns aggregate(groupBy(abbreviation,",
						"          StateName,",
						"          PipeLineRunID),",
						"     StateIncome = sum(StateIncome)) ~> AGGStateIncome",
						"AGGStateIncome sink(allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     input(",
						"          StateAbbreviation as string,",
						"          Statename as string,",
						"          StateIncome as long,",
						"          BatchID as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          StateAbbreviation = abbreviation,",
						"          Statename = StateName,",
						"          StateIncome,",
						"          BatchID = PipeLineRunID",
						"     )) ~> SinkSalesLT"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_stateAbreviationParquet')]",
				"[concat(variables('factoryId'), '/datasets/DS_incomeDataParquet')]",
				"[concat(variables('factoryId'), '/datasets/DS_SalesIncomesPerStates')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LookUp')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SSIS"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CdD_SSIS_DB",
								"type": "DatasetReference"
							},
							"name": "origen"
						},
						{
							"dataset": {
								"referenceName": "DB_edadJugadores",
								"type": "DatasetReference"
							},
							"name": "origenedad"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DB_edadJugadores",
								"type": "DatasetReference"
							},
							"name": "destino"
						}
					],
					"transformations": [
						{
							"name": "select"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "exists1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as integer,",
						"          Nombre as string,",
						"          NombreCompleto as string,",
						"          Club as string,",
						"          Liga as string,",
						"          FechaNacimiento as date,",
						"          AlturaCM as integer,",
						"          PesoKG as integer,",
						"          Nacionalidad as string,",
						"          ValorEuropa as double,",
						"          PiePreferido as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> origen",
						"source(output(",
						"          ID as integer,",
						"          NombreCompleto as string,",
						"          Edad as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> origenedad",
						"origen select(mapColumn(",
						"          ID,",
						"          NombreCompleto,",
						"          FechaNacimiento",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select",
						"exists1 derive(Edad = minus(year(currentDate()),year(FechaNacimiento))) ~> derivedColumn1",
						"select, select1 exists(select@ID == select1@ID,",
						"     negate:true,",
						"     broadcast: 'auto')~> exists1",
						"origenedad select(mapColumn(",
						"          ID,",
						"          NombreCompleto,",
						"          Edad",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          NombreCompleto as string,",
						"          Edad as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     preSQLs:['truncate table edadjugadores'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> destino"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CdD_SSIS_DB')]",
				"[concat(variables('factoryId'), '/datasets/DB_edadJugadores')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mergeando')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SSIS"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "mayor1990",
								"type": "DatasetReference"
							},
							"name": "Mayores1990"
						},
						{
							"dataset": {
								"referenceName": "MenorOigual1990",
								"type": "DatasetReference"
							},
							"name": "Menores1990"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DB_fifaMerged",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "sort1"
						},
						{
							"name": "sort2"
						},
						{
							"name": "Combinar"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as integer,",
						"          NombreCompleto as string,",
						"          FechaNacimiento as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Mayores1990",
						"source(output(",
						"          ID as integer,",
						"          NombreCompleto as string,",
						"          FechaNacimiento as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Menores1990",
						"Mayores1990 sort(asc(ID, true)) ~> sort1",
						"Menores1990 sort(asc(ID, true)) ~> sort2",
						"sort1, sort2 join(Mayores1990@ID == Menores1990@ID,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> Combinar",
						"Combinar sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          NombreCompleto as string,",
						"          FechaNacimiento as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     preSQLs:['truncate table FIFAMerged'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mayor1990')]",
				"[concat(variables('factoryId'), '/datasets/MenorOigual1990')]",
				"[concat(variables('factoryId'), '/datasets/DB_fifaMerged')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PieEsp')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SSIS"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CdD_SSIS_DB",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "FIFA_destino",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "PieEsp"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as integer,",
						"          Nombre as string,",
						"          NombreCompleto as string,",
						"          Club as string,",
						"          Liga as string,",
						"          FechaNacimiento as date,",
						"          AlturaCM as integer,",
						"          PesoKG as integer,",
						"          Nacionalidad as string,",
						"          ValorEuropa as double,",
						"          PiePreferido as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(PieEsp = case(PiePreferido =='Left','Izquierdo','Derecho')) ~> PieEsp",
						"PieEsp sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Nombre as string,",
						"          NombreCompleto as string,",
						"          Club as string,",
						"          Liga as string,",
						"          FechaNacimiento as date,",
						"          AlturaCM as integer,",
						"          PesoKG as integer,",
						"          Nacionalidad as string,",
						"          ValorEuropa as double,",
						"          PiePreferido as string,",
						"          PieEsp as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     preSQLs:['truncate table [dbo].[FIFA_destino]'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Nombre,",
						"          NombreCompleto,",
						"          Club,",
						"          Liga,",
						"          FechaNacimiento,",
						"          AlturaCM,",
						"          PesoKG,",
						"          Nacionalidad,",
						"          ValorEuropa,",
						"          PiePreferido,",
						"          PieEsp",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CdD_SSIS_DB')]",
				"[concat(variables('factoryId'), '/datasets/FIFA_destino')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransformJollyGoodSales')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Capítulo 7"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CdD_Jolly_Excel",
								"type": "DatasetReference"
							},
							"name": "JolleyGoodSales"
						},
						{
							"dataset": {
								"referenceName": "CdD_ExcelTipodeCambio",
								"type": "DatasetReference"
							},
							"name": "ExchangeRates"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "ExcludedMonthTotal"
						},
						{
							"name": "RatestoUSD"
						},
						{
							"name": "lookup1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     p_RunSeqno as integer (-1)",
						"}",
						"source(output(",
						"          Period as date,",
						"          Product as string,",
						"          {Unit Price} as double,",
						"          Currency as string,",
						"          {Units Sold} as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> JolleyGoodSales",
						"source(output(",
						"          FromCurrency as string,",
						"          ToCurrency as string,",
						"          Date as date,",
						"          ExchangeRate as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ExchangeRates",
						"JolleyGoodSales filter(Product != 'Month Total') ~> ExcludedMonthTotal",
						"ExchangeRates filter(ToCurrency == 'USD') ~> RatestoUSD",
						"ExcludedMonthTotal, RatestoUSD lookup(Currency == FromCurrency",
						"     && Period == Date,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookup1",
						"lookup1 derive(columnSalesValueUSD = {Unit Price}*{Units Sold}*ExchangeRate,",
						"          Retailer = 'jolly Good Ltd',",
						"          RunSeqNo = $p_RunSeqno) ~> derivedColumn1",
						"derivedColumn1 select(mapColumn(",
						"          Salesmonth = Period,",
						"          Product,",
						"          UnitsSold = {Units Sold},",
						"          SalesValueUSD = columnSalesValueUSD,",
						"          Retailer,",
						"          RunSeqNo",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          RowId as integer,",
						"          Retailer as string,",
						"          SalesMonth as date,",
						"          Product as string,",
						"          ManufacturerProductCode as string,",
						"          SalesValueUSD as decimal(18,2),",
						"          UnitsSold as integer,",
						"          SourceFileName as string,",
						"          RunSeqNo as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Retailer,",
						"          SalesMonth = Salesmonth,",
						"          Product,",
						"          SalesValueUSD,",
						"          UnitsSold,",
						"          RunSeqNo",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CdD_Jolly_Excel')]",
				"[concat(variables('factoryId'), '/datasets/CdD_ExcelTipodeCambio')]",
				"[concat(variables('factoryId'), '/datasets/ASQL_dboSalesLoad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Valores Agregados')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SSIS"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CdD_SSIS_DB",
								"type": "DatasetReference"
							},
							"name": "OrigenFifa"
						},
						{
							"dataset": {
								"referenceName": "CdD_SSIS_DB",
								"type": "DatasetReference"
							},
							"name": "OrigenFifa2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "destino_promedio",
								"type": "DatasetReference"
							},
							"name": "destinoPromedios"
						},
						{
							"dataset": {
								"referenceName": "destino_jugadoresPornacionalidad",
								"type": "DatasetReference"
							},
							"name": "DestinoJugadoresPornacionalidad"
						}
					],
					"transformations": [
						{
							"name": "PromedioPeso"
						},
						{
							"name": "numJugadoresPorPaiises"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as integer,",
						"          Nombre as string,",
						"          NombreCompleto as string,",
						"          Club as string,",
						"          Liga as string,",
						"          FechaNacimiento as date,",
						"          AlturaCM as integer,",
						"          PesoKG as integer,",
						"          Nacionalidad as string,",
						"          ValorEuropa as double,",
						"          PiePreferido as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> OrigenFifa",
						"source(output(",
						"          ID as integer,",
						"          Nombre as string,",
						"          NombreCompleto as string,",
						"          Club as string,",
						"          Liga as string,",
						"          FechaNacimiento as date,",
						"          AlturaCM as integer,",
						"          PesoKG as integer,",
						"          Nacionalidad as string,",
						"          ValorEuropa as double,",
						"          PiePreferido as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> OrigenFifa2",
						"OrigenFifa aggregate(groupBy(PiePreferido),",
						"     PesoKG = avg(PesoKG)) ~> PromedioPeso",
						"OrigenFifa2 aggregate(groupBy(Nacionalidad),",
						"     ID = count(ID)) ~> numJugadoresPorPaiises",
						"PromedioPeso sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          PiePref as string,",
						"          PromedioPesoKG as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          PiePref = PiePreferido,",
						"          PromedioPesoKG = PesoKG",
						"     )) ~> destinoPromedios",
						"numJugadoresPorPaiises sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Nacionalidad as string,",
						"          CantidadJugadores as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Nacionalidad,",
						"          CantidadJugadores = ID",
						"     )) ~> DestinoJugadoresPornacionalidad"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CdD_SSIS_DB')]",
				"[concat(variables('factoryId'), '/datasets/destino_promedio')]",
				"[concat(variables('factoryId'), '/datasets/destino_jugadoresPornacionalidad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowMovies')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CdD_Movies_ADLS",
								"type": "DatasetReference"
							},
							"name": "MoviesADLS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference"
							},
							"name": "Destino"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "window1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          movie as string,",
						"          title as string,",
						"          genres as string,",
						"          year as string,",
						"          Rating as string,",
						"          {Rotton Tomato} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> MoviesADLS",
						"MoviesADLS select(mapColumn(",
						"          movie,",
						"          title,",
						"          genres,",
						"          year,",
						"          {Rotten Tomato} = {Rotton Tomato}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 filter(toInteger(year) > 1950) ~> filter1",
						"filter1 derive(PrimaryGenre = iif(locate('|', genres) > 1,left(genres,locate('|',genres)-1),genres)) ~> derivedColumn1",
						"derivedColumn1 window(over(PrimaryGenre,",
						"          year),",
						"     desc({Rotten Tomato}, true),",
						"     RatingsRank = rank()) ~> window1",
						"window1 aggregate(groupBy(PrimaryGenre,",
						"          year),",
						"     AverageRating = avg(toInteger({Rotten Tomato})),",
						"          HighestRated = first(title),",
						"          LowestRated = last(title),",
						"          NumberOfMovies = count()) ~> aggregate1",
						"aggregate1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['PrimaryGenre','year'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> Destino"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CdD_Movies_ADLS')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/mergeJoin')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DB_edadJugadores",
								"type": "DatasetReference"
							},
							"name": "edadjugadores"
						},
						{
							"dataset": {
								"referenceName": "CdD_SSIS_DB",
								"type": "DatasetReference"
							},
							"name": "Fifa"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DB_edadNacimientoJugadores",
								"type": "DatasetReference"
							},
							"name": "destino"
						}
					],
					"transformations": [
						{
							"name": "sort1"
						},
						{
							"name": "select1"
						},
						{
							"name": "sort2"
						},
						{
							"name": "join1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as integer,",
						"          NombreCompleto as string,",
						"          Edad as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> edadjugadores",
						"source(output(",
						"          ID as integer,",
						"          Nombre as string,",
						"          NombreCompleto as string,",
						"          Club as string,",
						"          Liga as string,",
						"          FechaNacimiento as date,",
						"          AlturaCM as integer,",
						"          PesoKG as integer,",
						"          Nacionalidad as string,",
						"          ValorEuropa as double,",
						"          PiePreferido as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Fifa",
						"edadjugadores sort(asc(ID, true)) ~> sort1",
						"Fifa select(mapColumn(",
						"          ID,",
						"          FechaNacimiento",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sort(asc(ID, true)) ~> sort2",
						"sort1, sort2 join(edadjugadores@ID == select1@ID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          NombreCompleto as string,",
						"          Edad as integer,",
						"          FechaNacimiento as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     preSQLs:['truncate table EdadnacimientoJugadores'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> destino"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DB_edadJugadores')]",
				"[concat(variables('factoryId'), '/datasets/CdD_SSIS_DB')]",
				"[concat(variables('factoryId'), '/datasets/DB_edadNacimientoJugadores')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/multiplerowsInsingle')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "de varias filas a una sola",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference"
							},
							"name": "origen"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "destinogenericoADLS",
								"type": "LinkedServiceReference"
							},
							"name": "destino"
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ItemId as string,",
						"          VartId as string,",
						"          ItemName as string,",
						"          Vartname as string,",
						"          WhNo as string,",
						"          zone as string,",
						"          Bin as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> origen",
						"origen aggregate(groupBy(ItemId,",
						"          ItemName),",
						"     Vartname = collect(Vartname)) ~> aggregate1",
						"aggregate1 derive(Vartname = replace(replace(replace(toString(Vartname),'\"',''),'[',''),']','')) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'output',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     partitionFileNames:['ItemInfoDot.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> destino"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]",
				"[concat(variables('factoryId'), '/linkedServices/destinogenericoADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/singleRowInMultiple')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "origenColores2",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "conexionDestinoADLS",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "flatten1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ItemId as string,",
						"          ItemName as string,",
						"          Vartname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive(Vartname = split(Vartname, '|')) ~> derivedColumn1",
						"derivedColumn1 foldDown(unroll(Vartname, Vartname),",
						"     mapColumn(",
						"          ItemId,",
						"          ItemName,",
						"          Vartname",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"flatten1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'output',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     partitionFileNames:['ItemInfoColores2.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/origenColores2')]",
				"[concat(variables('factoryId'), '/linkedServices/conexionDestinoADLS')]"
			]
		}
	]
}