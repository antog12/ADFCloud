{
	"name": "scdt2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText4",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable5",
						"type": "DatasetReference"
					},
					"name": "srclookup"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable6",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable6",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "insert"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select2"
				},
				{
					"name": "Update"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "select3"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandarCost as decimal(19,4),",
				"          ListPrice as decimal(19,4)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandarCost as decimal(19,4),",
				"          Listprice as decimal(19,4),",
				"          EffectiveDate as timestamp,",
				"          Active as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select * fromDimproductsTable\\nwhere Active =1',",
				"     format: 'query') ~> srclookup",
				"srclookup select(mapColumn(",
				"          ProductID_lookup = ProductID,",
				"          Name_lookup = Name,",
				"          ProductNumber_lookup = ProductNumber,",
				"          Color_lookup = Color,",
				"          StandarCost_lookup = StandarCost,",
				"          Listprice_lookup = Listprice,",
				"          EffectiveDate_lookup = EffectiveDate,",
				"          Active_lookup = Active",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"source1, srclookup lookup(source1@ProductNumber == srclookup@ProductNumber,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 filter(isNull(srclookup@ProductNumber) || (source1@Name != srclookup@Name) || (source1@ProductNumber != srclookup@ProductNumber)) ~> insert",
				"insert derive(Active = 1,",
				"          EffectiveDate = fromUTC(currentUTC(), 'Europe/Madrid')) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          Name = source1@Name,",
				"          ProductNumber = source1@ProductNumber,",
				"          Color = source1@Color,",
				"          StandarCost = source1@StandarCost,",
				"          ListPrice = source1@ListPrice,",
				"          ProductID,",
				"          EffectiveDate,",
				"          Active",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"lookup1 filter((!isNull(srclookup@ProductNumber) && ((source1@Name != srclookup@Name) || (source1@ProductNumber != srclookup@ProductNumber)))) ~> Update",
				"Update derive(Active = 0) ~> derivedColumn2",
				"derivedColumn2 select(mapColumn(",
				"          ProductID,",
				"          Name = srclookup@Name,",
				"          ProductNumber = srclookup@ProductNumber,",
				"          Color = srclookup@Color,",
				"          StandarCost = srclookup@StandarCost,",
				"          Listprice = srclookup@Listprice,",
				"          EffectiveDate,",
				"          Active",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3 alterRow(updateIf(1==1)) ~> alterRow1",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandarCost as decimal(19,4),",
				"          Listprice as decimal(19,4),",
				"          EffectiveDate as timestamp,",
				"          Active as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ProductID,",
				"          Name,",
				"          ProductNumber,",
				"          Color,",
				"          StandarCost,",
				"          Listprice = ListPrice,",
				"          EffectiveDate,",
				"          Active",
				"     )) ~> sink1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandarCost as decimal(19,4),",
				"          Listprice as decimal(19,4),",
				"          EffectiveDate as timestamp,",
				"          Active as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['ProductID','Name','ProductNumber','Color','StandarCost','Listprice','EffectiveDate','Active'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ProductID,",
				"          Name,",
				"          ProductNumber,",
				"          Color,",
				"          StandarCost,",
				"          Listprice,",
				"          EffectiveDate,",
				"          Active",
				"     )) ~> sink2"
			]
		}
	}
}